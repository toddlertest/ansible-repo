---
# tasks to create and start aws instance(s) strict version
- name: Create a security group(with loop by rules)
  local_action:
             module: ec2_group
             name: "{{ aws.security_group_name }}"
             description: "{{ aws.security_group_description }}"
             region: "{{ aws.region }}"
             rules:
                - proto: "{{ item.value.proto }}"
                  from_port: "{{ item.value.from_port }}"
                  to_port: "{{ item.value.to_port }}"
                  cidr_ip: "{{ item.value.cidr_ip }}"
             rules_egress:
                 - proto: all
                   cidr_ip: 0.0.0.0/0
             purge_rules: false
  with_dict: "{{ sec_group_rules }}"
  tags:
    - create_sec_group

# - name: Launch the new EC2 Instance
#   local_action:
#             module: ec2
#             group: "{{ aws.security_group_name }}"
#             instance_type: "{{ aws.instance_type }}"
#             image: "{{ aws.image_id }}"
#             wait: true
#             region: "{{ aws.region }}"
#             keypair: "{{ aws.keypair_name }}"
#             count: "{{ aws.instance_count }}"
#   register: ec2
#   tags:
#     - launch_inst
- name: Launch exact count of instance(s) with uniq tag
  local_action:
             module: ec2
             group: "{{ aws.security_group_name }}"
             instance_type: "{{ aws.instance_type }}"
             image: "{{ aws.image_id }}"
             wait: true
             region: "{{ aws.region }}"
             keypair: "{{ aws.keypair_name }}"
             exact_count: 1
             count_tag:
                    UName: "uniq_{{ item }}"
             instance_tags:
                    UName: "uniq_{{ item }}"
  register: ec2
  with_sequence: count={{ aws.instance_count }}
  tags:
     - lauch_exact_inst

- name: Add all instance public IPs to in-memory hosts file
  add_host: hostname={{ item.tagged_instances[0].public_ip }} groups=ec2hosts
  with_items: "{{ ec2.results }}"

- name: Wait for SSH to come up
  local_action: wait_for
                host={{ item.tagged_instances[0].public_ip }}
                port=22
                state=started
  with_items: "{{ ec2.results }}"
  tags:
    - launch_inst
# # It should be the variable list of tags
# - name: Add tag to Instance(s)
#   local_action: ec2_tag
#                 resource={{ item.id }}
#                 region={{ aws.region }}
#                 state=present
#   with_items: "{{ ec2.instances }}"
#   args:
#     tags:
#        #Name: webserver
#        "{{ aws.instance_tags }}"
